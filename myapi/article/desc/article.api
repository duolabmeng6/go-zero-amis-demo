syntax = "v1"

type ArticleItems {
	Id        int64  `json:"id"`
	Title     string `json:"title"`
	Content   string `json:"content"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type (
	ArticleIndexRequest {
		Page     int64  `form:"page"`
		PerPage  int64  `form:"perPage"`
		Keywords string `form:"keywords,optional"`
	}

	ArticleIndexResponse {
		Items []ArticleItems `json:"items"`
		Total int64          `json:"total"`
	}
)

type (
	ArticleDestroyRequest {
		Id int64 `path:"id"`
	}
	//{"status":0,"msg":"\u5220\u9664\u6210\u529f"}
	ArticleDestroyResponse {
		Status int64  `json:"status"`
		Msg    string `json:"msg"`
	}
)

type (
	ArticleEditRequest {
		Id int64 `path:"id"`
	}
	//{"status":0,"msg":"\u5220\u9664\u6210\u529f"}
	ArticleEditResponse {
		Status int64        `json:"status"`
		Msg    string       `json:"msg"`
		Data   ArticleItems `json:"data"`
	}
)

@server(
	prefix: api
	middleware: CORSMiddleware
)
service atricle-api {
	@handler ArticleIndex
	get /articles (ArticleIndexRequest) returns (ArticleIndexResponse)
	
	@handler ArticleDestroy
	get /articles/:id (ArticleDestroyRequest) returns (ArticleDestroyResponse)
	
	@handler ArticleEdit
	get /articles/:id/edit (ArticleEditRequest) returns (ArticleEditResponse)
	
}